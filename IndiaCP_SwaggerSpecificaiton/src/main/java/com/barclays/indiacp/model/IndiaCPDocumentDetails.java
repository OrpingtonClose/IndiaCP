/*
 * IndiaCP API
 * This API will drive the UI
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.barclays.indiacp.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;

/**
 * IndiaCPDocumentDetails
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-01-04T11:02:40.426Z")
public class IndiaCPDocumentDetails   {
  @JsonProperty("cpProgramId")
  private String cpProgramId = null;

  @JsonProperty("cpIssueId")
  private String cpIssueId = null;

  /**
   * Type of Legal Documents exchanged and signed/countersigned by participants in the CPProgram
   */
  public enum DocTypeEnum {
    CREDIT_RATING_DOC("CREDIT_RATING_DOC"),
    
    BOARD_RESOLUTION_BORROWING_LIMIT_DOC("BOARD_RESOLUTION_BORROWING_LIMIT_DOC"),
    
    DEPOSITORY_DOCS("DEPOSITORY_DOCS"),
    
    IPA_DOCS("IPA_DOCS"),
    
    IPA_CERTIFICATE_DOC("IPA_CERTIFICATE_DOC"),
    
    CORPORATE_ACTION_FORM("CORPORATE_ACTION_FORM"),
    
    DEAL_CONFIRMATION_DOC("DEAL_CONFIRMATION_DOC");

    private String value;

    DocTypeEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DocTypeEnum fromValue(String text) {
      for (DocTypeEnum b : DocTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("docType")
  private DocTypeEnum docType = null;

  @JsonProperty("docSubType")
  private String docSubType = null;

  @JsonProperty("docExtension")
  private String docExtension = null;

  @JsonProperty("docHash")
  private String docHash = null;

  @JsonProperty("docStatus")
  private String docStatus = null;

  @JsonProperty("modifiedBy")
  private String modifiedBy = null;

  @JsonProperty("lastModified")
  private Date lastModified = null;

  public IndiaCPDocumentDetails cpProgramId(String cpProgramId) {
    this.cpProgramId = cpProgramId;
    return this;
  }

   /**
   * Unique identifier of the CP Program that this document is associated with
   * @return cpProgramId
  **/
  @ApiModelProperty(value = "Unique identifier of the CP Program that this document is associated with")
  public String getCpProgramId() {
    return cpProgramId;
  }

  public void setCpProgramId(String cpProgramId) {
    this.cpProgramId = cpProgramId;
  }

  public IndiaCPDocumentDetails cpIssueId(String cpIssueId) {
    this.cpIssueId = cpIssueId;
    return this;
  }

   /**
   * Unique identifier of the CP Issue that this document is associated with
   * @return cpIssueId
  **/
  @ApiModelProperty(value = "Unique identifier of the CP Issue that this document is associated with")
  public String getCpIssueId() {
    return cpIssueId;
  }

  public void setCpIssueId(String cpIssueId) {
    this.cpIssueId = cpIssueId;
  }

  public IndiaCPDocumentDetails docType(DocTypeEnum docType) {
    this.docType = docType;
    return this;
  }

   /**
   * Type of Legal Documents exchanged and signed/countersigned by participants in the CPProgram
   * @return docType
  **/
  @ApiModelProperty(value = "Type of Legal Documents exchanged and signed/countersigned by participants in the CPProgram")
  public DocTypeEnum getDocType() {
    return docType;
  }

  public void setDocType(DocTypeEnum docType) {
    this.docType = docType;
  }

  public IndiaCPDocumentDetails docSubType(String docSubType) {
    this.docSubType = docSubType;
    return this;
  }

   /**
   * Sub-Type of the Document. May or may not be applicable. For e.g. for IPADOC is a collection of documents that need to be sent to the IPA - like FIMMDA.pdf and others.
   * @return docSubType
  **/
  @ApiModelProperty(value = "Sub-Type of the Document. May or may not be applicable. For e.g. for IPADOC is a collection of documents that need to be sent to the IPA - like FIMMDA.pdf and others.")
  public String getDocSubType() {
    return docSubType;
  }

  public void setDocSubType(String docSubType) {
    this.docSubType = docSubType;
  }

  public IndiaCPDocumentDetails docExtension(String docExtension) {
    this.docExtension = docExtension;
    return this;
  }

   /**
   * File extension of the document. E.g. PDF. The docSubType.docExtension would be the full file name in the zipped file uploaded to the DL.
   * @return docExtension
  **/
  @ApiModelProperty(value = "File extension of the document. E.g. PDF. The docSubType.docExtension would be the full file name in the zipped file uploaded to the DL.")
  public String getDocExtension() {
    return docExtension;
  }

  public void setDocExtension(String docExtension) {
    this.docExtension = docExtension;
  }

  public IndiaCPDocumentDetails docHash(String docHash) {
    this.docHash = docHash;
    return this;
  }

   /**
   * SHA256 Hash of the Content of the Document. This hash uniquely identifies the document.
   * @return docHash
  **/
  @ApiModelProperty(value = "SHA256 Hash of the Content of the Document. This hash uniquely identifies the document.")
  public String getDocHash() {
    return docHash;
  }

  public void setDocHash(String docHash) {
    this.docHash = docHash;
  }

  public IndiaCPDocumentDetails docStatus(String docStatus) {
    this.docStatus = docStatus;
    return this;
  }

   /**
   * The current status of the document. Possible values are UNSIGNED, SIGNEDBYISSUER, SIGNEDBYINVESTOR, SIGNEDBYIPA, SIGNEDBYNSDL
   * @return docStatus
  **/
  @ApiModelProperty(value = "The current status of the document. Possible values are UNSIGNED, SIGNEDBYISSUER, SIGNEDBYINVESTOR, SIGNEDBYIPA, SIGNEDBYNSDL")
  public String getDocStatus() {
    return docStatus;
  }

  public void setDocStatus(String docStatus) {
    this.docStatus = docStatus;
  }

  public IndiaCPDocumentDetails modifiedBy(String modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Unique identifier of the Logged-in User that performed the action. This is required for Audit History
   * @return modifiedBy
  **/
  @ApiModelProperty(value = "Unique identifier of the Logged-in User that performed the action. This is required for Audit History")
  public String getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(String modifiedBy) {
    this.modifiedBy = modifiedBy;
  }

  public IndiaCPDocumentDetails lastModified(Date lastModified) {
    this.lastModified = lastModified;
    return this;
  }

   /**
   * Last Modified Date for this CPIssue. This is required for Audit History
   * @return lastModified
  **/
  @ApiModelProperty(value = "Last Modified Date for this CPIssue. This is required for Audit History")
  public Date getLastModified() {
    return lastModified;
  }

  public void setLastModified(Date lastModified) {
    this.lastModified = lastModified;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndiaCPDocumentDetails indiaCPDocumentDetails = (IndiaCPDocumentDetails) o;
    return Objects.equals(this.cpProgramId, indiaCPDocumentDetails.cpProgramId) &&
        Objects.equals(this.cpIssueId, indiaCPDocumentDetails.cpIssueId) &&
        Objects.equals(this.docType, indiaCPDocumentDetails.docType) &&
        Objects.equals(this.docSubType, indiaCPDocumentDetails.docSubType) &&
        Objects.equals(this.docExtension, indiaCPDocumentDetails.docExtension) &&
        Objects.equals(this.docHash, indiaCPDocumentDetails.docHash) &&
        Objects.equals(this.docStatus, indiaCPDocumentDetails.docStatus) &&
        Objects.equals(this.modifiedBy, indiaCPDocumentDetails.modifiedBy) &&
        Objects.equals(this.lastModified, indiaCPDocumentDetails.lastModified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpProgramId, cpIssueId, docType, docSubType, docExtension, docHash, docStatus, modifiedBy, lastModified);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndiaCPDocumentDetails {\n");
    
    sb.append("    cpProgramId: ").append(toIndentedString(cpProgramId)).append("\n");
    sb.append("    cpIssueId: ").append(toIndentedString(cpIssueId)).append("\n");
    sb.append("    docType: ").append(toIndentedString(docType)).append("\n");
    sb.append("    docSubType: ").append(toIndentedString(docSubType)).append("\n");
    sb.append("    docExtension: ").append(toIndentedString(docExtension)).append("\n");
    sb.append("    docHash: ").append(toIndentedString(docHash)).append("\n");
    sb.append("    docStatus: ").append(toIndentedString(docStatus)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

