/**
 * IndiaCP API
 * This API will drive the UI
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/* tslint:disable:no-unused-variable member-ordering */

module app.services {
    "use strict";

    export interface IDocSignService {
        signDoc(file: File, docName: string, extraHttpRequestParams?: any): ng.IHttpPromise<any>;
    }

    class DocSignService implements IDocSignService {
        protected basePath: string;
        public defaultHeaders: any = {};

        static $inject: string[] = ["$http", "localStorageService", "Upload", "$httpParamSerializer"];

        constructor(protected $http: ng.IHttpService,
            protected localStorageService: ng.local.storage.ILocalStorageService,
            protected Upload: ng.angularFileUpload.IUploadService,
            protected $httpParamSerializer?: (d: any) => any) {
            var nodeInfo: app.models.NodeInfo = this.localStorageService.get("nodeInfo") as app.models.NodeInfo;
            var host: string = nodeInfo.host;
            var port: number = nodeInfo.port;
            this.basePath = `http://${host}:${port}/indiacp`;
        }

        private extendObj<T1, T2>(objA: T1, objB: T2) {
            for (let key in objB) {
                if (objB.hasOwnProperty(key)) {
                    objA[key.toString()] = objB[key.toString()];
                }
            }
            return <T1 & T2>objA;
        }

        /**
         * Adds the ISIN to the India CP Program
         * Adds the ISIN to the India CP Program
         * @param cpProgramId CP Program ID that uniquely identifies the CP Program issued by the Investor
         * @param isin ISIN generated by NSDL
         */
        public signDoc(file: File, docName: string, extraHttpRequestParams?: any): ng.IHttpPromise<app.models.IndiaCPProgram> {
            const localVarPath = this.basePath + "/indiacpdocuments/signDoc/{docName}"
                .replace("{" + "docName" + "}", String(docName))

            let queryParameters: any = {};
            let headerParams: any = this.extendObj({}, this.defaultHeaders);
            // verify required parameter "cpProgramId" is not null or undefined
            if (docName === null || docName === undefined) {
                throw new Error("Required parameter cpProgramId was null or undefined when calling addISIN.");
            }

            let httpUploadRequestParams: any = {
                url: localVarPath,
                data: { file: file },
                method: "POST"
            };
            return this.Upload.upload(httpUploadRequestParams);
        }
    }

    angular
        .module("app.services")
        .service("app.services.DocSignService", DocSignService);
}
